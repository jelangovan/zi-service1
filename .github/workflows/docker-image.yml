on:
  push:
    branches: [main]


name: zoominfo appp Project CI on ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Run a one-line script
        run: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        run: unzip awscliv2.zip
        run: sudo ./aws/install
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ECR_REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: 1.0
        run: |
          # Build a docker container and push it to ECR 
          #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker build -t zoominfo-service1 .
          docker tag zoominfo-service1:latest 820774903764.dkr.ecr.eu-west-1.amazonaws.com/zoominfo-service1:latest
          echo "Pushing image to ECR..."
          docker push 820774903764.dkr.ecr.eu-west-1.amazonaws.com/zoominfo-service1:latest
          #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          #echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      
      - name: restart tasks def
        run: for taskarn in $(aws ecs list-tasks --cluster zoominfo-ecs-fargate --service zoominfo-service1 --desired-status RUNNING --output text --query 'taskArns'); do aws ecs stop-task --cluster zoominfo-ecs-fargate --task $taskarn; done;
          
        
          
